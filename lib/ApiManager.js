'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _lodash=require('lodash');var _lodash2=_interopRequireDefault(_lodash);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var ApiManager=function(){function ApiManager(adapterFindApi,adapterSend){_classCallCheck(this,ApiManager);this.adapterFindApi=adapterFindApi;this.adapterSend=adapterSend;this.relations={}}_createClass(ApiManager,[{key:'findApi',value:function findApi(apiQuery){return this.adapterFindApi(apiQuery)}},{key:'receiveQuery',value:function receiveQuery(clientId,apiQuery,query,cursorId){var _this=this;return this.findApi(apiQuery).then(function(api){_lodash2.default.set(_this.relations,[clientId,cursorId],apiQuery);api.receiveQuery(clientId,query,cursorId,function(clientId,bundles){_this.adapterSend(clientId,bundles)});return api})}},{key:'clientDisconnected',value:function clientDisconnected(clientId){var _this2=this;var cursors=_lodash2.default.get(this.relations,[clientId]);var promises=[];for(var cursorId in cursors){promises.push(function(clientId,cursorId){return new Promise(function(){return _this2.cursorDestroyed(clientId,cursorId)})}(clientId,cursorId))}return promises}},{key:'cursorDestroyed',value:function cursorDestroyed(clientId,cursorId){var _this3=this;var apiQuery=_lodash2.default.get(this.relations,[clientId,cursorId]);return this.findApi(apiQuery).then(function(api){api.cursorDestroyed(clientId,cursorId,function(clientId,bundles){_this3.adapterSend(clientId,bundles)})})}}]);return ApiManager}();exports.default=ApiManager;
//# sourceMappingURL=ApiManager.js.map
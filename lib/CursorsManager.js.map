{"version":3,"sources":["../src/lib/CursorsManager.js"],"names":["CursorsManager","Cursor","adapterCursorDestroyed","adapterCustorConstructed","cursors","nextId","query","data","cursor","hasOwnProperty","id","arguments","length","set","Error"],"mappings":"itBAAA;;;;MAKaA,e,SAAAA,c,YACX,yBAA+E,IAAnEC,OAAmE,2DAA1DA,MAA0D,IAAlDC,uBAAkD,iBAA1BC,yBAA0B,mDAC7E,KAAKF,MAAL,CAAcA,MAAd,CACA,KAAKG,OAAL,CAAe,EAAf,CACA,KAAKC,MAAL,CAAc,CAAd,CACA,KAAKH,sBAAL,CAA8BA,sBAA9B,CACA,KAAKC,wBAAL,CAAgCA,wBACjC,CAED;;;;iEAKIG,K,CAAOC,I,CAAM,CACf,GAAIC,QAAS,GAAI,MAAKP,MAAT,CAAgBK,KAAhB,CAAuBC,IAAvB,CAA6B,IAA7B,CAAmC,KAAKF,MAAxC,CAAb,CACA,KAAKD,OAAL,CAAa,KAAKC,MAAlB,EAA4BG,MAA5B,CACA,KAAKH,MAAL,GACA,GAAI,MAAO,MAAKF,wBAAZ,EAAyC,UAA7C,CAAyD,CACvD,KAAKA,wBAAL,CAA8BK,MAA9B,CACD,CACD,MAAOA,OACR,CAED;;;;;;;;yCASMA,M,CAAQF,K,CAAOC,I,CAAM,CACzB,GAAI,CAACC,OAAOC,cAAP,CAAsB,IAAtB,CAAL,CAAkC,CAEhCD,OAAOE,EAAP,CAAY,KAAKL,MAAL,EAAZ,CACA,KAAKD,OAAL,CAAaI,OAAOE,EAApB,EAA0BF,MAA1B,CAEA,GAAIF,KAAJ,CAAWE,OAAOF,KAAP,CAAeA,KAAf,CACX,GAAIK,UAAUC,MAAV,EAAoB,CAAxB,CAA2BJ,OAAOK,GAAP,CAAW,EAAX,CAAeN,IAAf,EAE3B,GAAI,MAAO,MAAKJ,wBAAZ,EAAyC,UAA7C,CAAyD,CACvD,KAAKA,wBAAL,CAA8BK,MAA9B,CACD,CAED,MAAOA,OACR,CAbD,IAaO,CACL,KAAM,IAAIM,MAAJ,CAAU,2BAAV,CACP,CACF,CAED;;;6DAIgBN,M,CAAQ,CACtB,MAAO,MAAKJ,OAAL,CAAaI,OAAOE,EAApB,CAAP,CACA,MAAOF,QAAOE,EAAd,CACA,GAAI,MAAO,MAAKR,sBAAZ,EAAuC,UAA3C,CAAuD,CACrD,KAAKA,sBAAL,CAA4BM,MAA5B,CACD,CACF,C,6BAGH;;;;;;GAQA","file":"CursorsManager.js","sourcesContent":["/**\n * A small registrar of cursors. Sends into Cursor constructor unique id and link to current manager.\n * @class\n * @memberof module:ancient-cursor\n */\nexport class CursorsManager {\n  constructor(Cursor = Cursor, adapterCursorDestroyed, adapterCustorConstructed) {\n    this.Cursor = Cursor;\n    this.cursors = {};\n    this.nextId = 0;\n    this.adapterCursorDestroyed = adapterCursorDestroyed;\n    this.adapterCustorConstructed = adapterCustorConstructed;\n  }\n  \n  /**\n   * Constructs new {@link CursorsManager#Cursor} with unique id within current manager. Set constructed cursor into `this.cursors`. Call `this.adapterCustorConstructed` method.\n   * @param query\n   * @param data\n   */\n  new(query, data) {\n    var cursor = new this.Cursor(query, data, this, this.nextId);\n    this.cursors[this.nextId] = cursor;\n    this.nextId++;\n    if (typeof(this.adapterCustorConstructed) == 'function') {\n      this.adapterCustorConstructed(cursor);\n    }\n    return cursor;\n  }\n  \n  /**\n   * Resume destroyed cursor into `this.cursors`. Define new id for cursor. You can reset query and default data. Call `this.adapterCustorConstructed` method.\n   * @param {Cursor} cursor\n   * @param [query]\n   * @param [data]\n   * @throws Cursor must be destroyed.\n   * @description\n   * > If cursor not destroyed, throw error.\n   */\n  renew(cursor, query, data) {\n    if (!cursor.hasOwnProperty('id')) {\n\n      cursor.id = this.nextId++;\n      this.cursors[cursor.id] = cursor;\n      \n      if (query) cursor.query = query;\n      if (arguments.length == 3) cursor.set('', data);\n\n      if (typeof(this.adapterCustorConstructed) == 'function') {\n        this.adapterCustorConstructed(cursor);\n      }\n\n      return cursor;\n    } else {\n      throw new Error('Cursor must be destroyed.');\n    }\n  }\n\n  /**\n   * Calls if used `cursor.destroy` method. Call `this.adapterCursorDestroyed` method. Remove cursor from `this.cursors` hash.\n   * @param {Cursor} cursor \n   */\n  cursorDestroyed(cursor) {\n    delete this.cursors[cursor.id];\n    delete cursor.id;\n    if (typeof(this.adapterCursorDestroyed) == 'function') {\n      this.adapterCursorDestroyed(cursor);\n    }\n  }\n}\n\n/**\n * @callback CursorManager~adapterCursorDestroyed\n * @memberof module:ancient-cursor\n * @param {Cursor} cursor\n * @description\n * Can be sended into `ApiManager` into constructor. Used for handle cursor destroyed event. For example you can send it information to some api within `ApiManager`.\n */\n\n/**\n * @callback CursorManager~adapterCustorConstructed\n * @memberof module:ancient-cursor\n * @param {Cursor} cursor\n * @description\n * Can be sended into `ApiManager` into constructor. Used for handle cursor constructed event. For example you can send it information to some api within `ApiManager`.\n */"]}
{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","BundlesQueue","id","task","done","describe","it","document","any","custom","many","cursor","equal","get","changesPattern","old","path","action","arguments","on","current","stop","changes","isClone","deepEqual","isTrue","isFalse","set","a","b","c","d","x","e","setTimeout","Error","splice","destroy","testString","queue","addBundle","counter","interval","manager","adapterFounder","apiQuery","sendBundles","clientId","channelId","bundles","adapterSend","Promise","resolve","receiveQuery","query","cursorId","setInterval","cursorDestroyed","clearInterval","channelDisconnected","new","id0","cursors","notProperty","renew","id1","notEqual","data","type","value","undefined","start","deleteCount","items","server","clientCursors","currentPerCursor","isEqual","bundlesCounter","client","api","request","clientCursorId","result","cloneDeep","ClientBundlesQueue","bundlesQueue","needData","cursor1","cursor2"],"mappings":"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","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport {\n  Cursor,\n  BundlesQueue as BundlesQueueProto,\n  CursorsManager,\n  ApiManager,\n  executeBundle,\n  executers,\n} from '../lib';\nimport reactTest from './react';\n\nimport lodash from 'lodash';\nimport mingo from 'mingo';\n\nclass BundlesQueue extends BundlesQueueProto {\n  _handler(id, task, done) {\n    task();\n    done();\n  }\n}\n\ndescribe('AncientSouls/Graph', () => {\n  describe('Cursor', () => {\n    it('get by path', () => {\n      var document = { any: [{ custom: { many: 'data' } }] };\n      var cursor = new Cursor(true, document);\n      assert.equal(cursor.get('any.0.custom.many'), 'data');\n    });\n    it('get handle path current set changes', (done) => {\n      var document = { any: [{ custom: { many: 'a' } }] };\n      var cursor = new Cursor(true, document);\n      var changesPattern = {\n        old: { many: 'a' },\n        path: ['any','0','custom'],\n        action: 'set',\n        arguments: ['any.0.custom', { many: 'b' }],\n      };\n      cursor.on('any.0.custom.many', (old, current, stop, changes, isClone) => {\n        assert.equal(old, 'a');\n        assert.equal(current, 'b');\n        assert.deepEqual(changes, changesPattern);\n        assert.isTrue(isClone);\n      });\n      cursor.on('any.0.custom', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, { many: 'a' });\n        assert.deepEqual(current, { many: 'b' });\n        assert.deepEqual(changes, changesPattern);\n        assert.isTrue(isClone);\n      });\n      cursor.on('any.0', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, { custom: { many: 'b' } });\n        assert.deepEqual(current, { custom: { many: 'b' } });\n        assert.deepEqual(changes, changesPattern);\n        assert.isFalse(isClone);\n        done();\n      });\n      cursor.set('any.0.custom', { many: 'b' });\n    });\n    it('set', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }] });\n      cursor.set('a.0.b', 'z');\n      assert.deepEqual(cursor.get('a.0'), { b: 'z' });\n      cursor.set('', { x: 'y' });\n      assert.deepEqual(cursor.get(), { x: 'y' });\n    });\n    it('splice', (done) => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }], e: 'f' });\n      cursor.on('a.1', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, { c: 'y' });\n        assert.deepEqual(current, { e: 'q' });\n        assert.isTrue(isClone);\n        setTimeout(done, 100);\n      });\n      cursor.on('a.0', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, current);\n        assert.isTrue(isClone);\n      });\n      cursor.on('e', function(old, current, stop, changes, isClone) {\n        throw new Error('It should not be');\n      });\n      cursor.splice('a', 1, 1, { e: 'q' });\n      assert.equal(cursor.get('a.1.e'), 'q');\n    });\n    it('destroy', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }], e: 'f' });\n      cursor.destroy();\n    });\n    it('destroy', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }], e: 'f' });\n      cursor.destroy();\n    });\n  });\n  describe('BundlesQueue', () => {\n    it('only nextId bundle can be handled', () => {\n      var testString = '';\n      var queue = new BundlesQueue();\n      queue.addBundle(2, () => testString += 'c');\n      queue.addBundle(1, () => testString += 'b');\n      queue.addBundle(0, () => testString += 'a');\n      queue.addBundle(3, () => testString += 'd');\n      assert.equal(testString, 'abcd');\n    });\n  });\n  describe('ApiManager', () => {\n    it('api instance must receive queries and send bundles', (done) => {\n      var counter = 1;\n      var interval;\n      var manager = new ApiManager(\n        function adapterFounder(apiQuery) {\n          assert.equal(apiQuery, 'a');\n          function sendBundles(clientId, channelId, bundles) {\n            manager.adapterSend(clientId, channelId, bundles);\n          };\n          return new Promise((resolve) => resolve({\n            receiveQuery(clientId, channelId, query, cursorId, sendBundles) {\n              assert.equal(clientId, 1);\n              assert.equal(channelId, 2);\n              assert.equal(query, null);\n              assert.equal(cursorId, 3);\n              interval = setInterval(() => {\n                sendBundles(clientId, channelId, ++counter);\n              }, 100);\n            },\n            cursorDestroyed(clientId, channelId, cursorId, sendBundles) {\n              assert.equal(clientId, 1);\n              assert.equal(channelId, 2);\n              assert.equal(cursorId, 3);\n              clearInterval(interval);\n              done();\n            },\n          }));\n        },\n        function adapterSend(clientId, channelId, bundles) {\n          assert.equal(clientId, 1);\n          assert.equal(channelId, 2);\n          assert.equal(bundles, counter);\n          if (counter > 3) {\n            manager.channelDisconnected(clientId, channelId);\n          }\n        },\n      );\n      manager.receiveQuery(1, 2, 'a', null, 3);\n    });\n  });\n  describe('CursorsManager', () => {\n    it('just should works', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any','thing');\n      var id0 = cursor.id;\n      assert.equal(manager.cursors[cursor.id], cursor);\n      cursor.destroy();\n      assert.notProperty(manager.cursors, cursor.id);\n      manager.renew(cursor, 'other', 'something');\n      var id1 = cursor.id;\n      assert.notEqual(id0, id1);\n      assert.equal(cursor.query, 'other');\n      assert.equal(cursor.data, 'something');\n    });\n  });\n  describe('bundles', () => {\n    it('set', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any',{'some':'thing'});\n      executeBundle({\n        cursor: cursor.id, type: 'set',\n        path: 'some',\n        value: 'other',\n      }, cursor, executers);\n      assert.deepEqual(cursor.get('some'), 'other');\n    });\n    it('unset', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any',{'some':'thing'});\n      executeBundle({\n        cursor: cursor.id, type: 'unset',\n        path: 'some',\n      }, cursor, executers);\n      assert.deepEqual(cursor.get('some'), undefined);\n    });\n    it('splice', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any',{'some':['things','and','others']});\n      executeBundle({\n        cursor: cursor.id, type: 'splice',\n        path: 'some',\n        start: 2, deleteCount: 0, items: ['some'],\n      }, cursor, executers);\n      assert.deepEqual(cursor.get('some'), ['things','and','some','others']);\n    });\n  });\n  describe('concepts', () => {\n    it('fake primitive server-client with one api provider', () => {\n      var server = (() => {\n        var cursor = new Cursor(undefined, { a: { b: [{ c: 'd' }, { e: 'f' }] } });\n        var clientCursors = {};\n        \n        cursor.on(null, (old, current, stop) => {\n          var bundles = {};\n          for (var c in clientCursors) {\n            let currentPerCursor = lodash.get(current, clientCursors[c].query);\n            if (!lodash.isEqual(clientCursors[c].old, currentPerCursor)) {\n              clientCursors[c].old = currentPerCursor;\n              bundles[c] = {\n                id: clientCursors[c].bundlesCounter, \n                type: 'set', cursor: c,\n                path: '', value: currentPerCursor,\n              };\n              clientCursors[c].bundlesCounter++;\n            }\n          }\n          client.changes(bundles);\n        });\n        \n        var server = {\n          api: {\n            cursor,\n            clientCursors,\n          },\n          request: (clientCursorId, query) => {\n            var result = lodash.cloneDeep(cursor.get(query));\n            if (!clientCursors[clientCursorId]) {\n              clientCursors[clientCursorId] = {\n                bundlesCounter: 0,\n                query: query,\n                old: result,\n              };\n            }\n            return lodash.cloneDeep(result);\n          },\n        };\n        \n        return server;\n      })();\n      \n      var client = (() => {\n        class ClientBundlesQueue extends BundlesQueueProto {\n          constructor(cursor) {\n            super();\n            this.cursor = cursor;\n          }\n          _handler(id, task, done) {\n            executeBundle(task, this.cursor, executers);\n            done();\n          }\n        }\n        \n        var manager = new CursorsManager(class extends Cursor {\n          constructor() {\n            super(...arguments);\n            this.bundlesQueue = new ClientBundlesQueue(this);\n          }\n        });\n        \n        return {\n          api: {\n            manager,\n            needData: (query) => {\n              var cursor = manager.new(query);\n              var data = server.request(cursor.id, query);\n              cursor.set(null, data);\n              return cursor;\n            },\n          },\n          changes: (bundles) => {\n            for (var b in bundles) {\n              if (manager.cursors[bundles[b].cursor]) {\n                manager.cursors[bundles[b].cursor].bundlesQueue.addBundle(bundles[b].id, bundles[b]);\n              }\n            }\n          }\n        };\n      })();\n      \n      var cursor1 = client.api.needData('a');\n      var cursor2 = client.api.needData('a.b[0]');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get('c'), server.api.cursor.get('a.b[0].c'));\n      \n      server.api.cursor.set('a.b[0].c', 'j');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get('c'), server.api.cursor.get('a.b[0].c'));\n      \n      server.api.cursor.splice('a.b', 0, 1, 'abrvalk');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get(), server.api.cursor.get('a.b[0]'));\n    });\n    reactTest();\n  });\n});"]}
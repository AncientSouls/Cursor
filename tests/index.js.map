{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","describe","it","document","any","custom","many","cursor","equal","get","done","changesPattern","old","path","action","arguments","on","current","stop","changes","isClone","deepEqual","isTrue","isFalse","set","a","b","c","d","x","e","setTimeout","Error","splice","destroy","once","cm","bqm","adapters","new","useBundle","id","type","value","undefined","start","deleteCount","items","counter","interval","disconnected","manager","adapterFindApi","apiQuery","sendBundles","channelId","bundles","adapterSend","Promise","resolve","receiveQuery","query","cursorId","setInterval","cursorDestroyed","clearInterval","channelDisconnected","id0","cursors","notProperty","renew","id1","notEqual","data","server","channelCursors","currentPerCursor","isEqual","bundlesCounter","channel","api","request","channelCursorId","result","cloneDeep","needData","cursor1","cursor2"],"mappings":"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","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport {\n  Cursor,\n  BundleQueuesManager,\n  generateAdapterForBundleQueuesManager,\n  CursorsManager,\n  ApiManager,\n} from '../lib';\nimport reactTest from './react';\n\nimport lodash from 'lodash';\nimport mingo from 'mingo';\n\n/*\n```js\nvar bqm = new ExtendedBundleQueuesManager({\n  getCursor(cursorId) {}, // If not founded, \n  // Adapters for custom bundles storage.\n  addBundle(cursorId, bundleId, bundle) {},\n  removeBundle(cursorId, bundleId, bundle) {},\n  // Adapters for custom nextBundleId storage.\n  getQueueState(cursorId) {}, // { cursorId, handling: Boolean, nextBundleId: Number  }\n  setQueueState(cursorId, handling, nextBundleId) {},\n});\n\n// Add bundle to personal cursor queue.\n// If bundleId equal to last cursor nextBundleId, then execute bundle.\nbqm.useBundle(cursorId, bundleId, bundle);\n```\n\nclass BundlesQueue extends BundlesQueueProto {\n  _handler(id, task, done) {\n    task();\n    done();\n  }\n}\n*/\n\ndescribe('AncientSouls/Cursor', () => {\n  describe('Cursor', () => {\n    it('get by path', () => {\n      var document = { any: [{ custom: { many: 'data' } }] };\n      var cursor = new Cursor(true, document);\n      assert.equal(cursor.get('any.0.custom.many'), 'data');\n    });\n    it('get handle path current set changes', (done) => {\n      var document = { any: [{ custom: { many: 'a' } }] };\n      var cursor = new Cursor(true, document);\n      var changesPattern = {\n        old: { many: 'a' },\n        path: ['any','0','custom'],\n        action: 'set',\n        arguments: ['any.0.custom', { many: 'b' }],\n      };\n      cursor.on('any.0.custom.many', (old, current, stop, changes, isClone) => {\n        assert.equal(old, 'a');\n        assert.equal(current, 'b');\n        assert.deepEqual(changes, changesPattern);\n        assert.isTrue(isClone);\n      });\n      cursor.on('any.0.custom', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, { many: 'a' });\n        assert.deepEqual(current, { many: 'b' });\n        assert.deepEqual(changes, changesPattern);\n        assert.isTrue(isClone);\n      });\n      cursor.on('any.0', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, { custom: { many: 'b' } });\n        assert.deepEqual(current, { custom: { many: 'b' } });\n        assert.deepEqual(changes, changesPattern);\n        assert.isFalse(isClone);\n        done();\n      });\n      cursor.set('any.0.custom', { many: 'b' });\n    });\n    it('set', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }] });\n      cursor.set('a.0.b', 'z');\n      assert.deepEqual(cursor.get('a.0'), { b: 'z' });\n      cursor.set('', { x: 'y' });\n      assert.deepEqual(cursor.get(), { x: 'y' });\n    });\n    it('splice', (done) => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }], e: 'f' });\n      cursor.on('a.1', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, { c: 'y' });\n        assert.deepEqual(current, { e: 'q' });\n        assert.isTrue(isClone);\n        setTimeout(done, 100);\n      });\n      cursor.on('a.0', function(old, current, stop, changes, isClone) {\n        assert.deepEqual(old, current);\n        assert.isTrue(isClone);\n      });\n      cursor.on('e', function(old, current, stop, changes, isClone) {\n        throw new Error('It should not be');\n      });\n      cursor.splice('a', 1, 1, { e: 'q' });\n      assert.equal(cursor.get('a.1.e'), 'q');\n    });\n    it('destroy', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }], e: 'f' });\n      cursor.destroy();\n    });\n    it('destroy', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }], e: 'f' });\n      cursor.destroy();\n    });\n    it('once', (done) => {\n      var cursor = new Cursor(true, 'a');\n      cursor.on('', (old, current) => {\n        if (current == 'c') done();\n      });\n      cursor.once('', (old, current) => {\n        assert.equal(current, 'b');\n      });\n      cursor.set('', 'b');\n      cursor.set('', 'c');\n    });\n  });\n  describe('BundleQueuesManager', () => {\n    it('set', (done) => {\n      var cm = new CursorsManager(Cursor);\n      var bqm = new BundleQueuesManager(...generateAdapterForBundleQueuesManager(cm).adapters);\n      var c = cm.new('any',{'some':'thing'});\n      \n      bqm.useBundle({\n        id: 5, cursor: c.id, type: 'set',\n        path: 'some', value: 'nothing',\n      }, () => {\n        bqm.useBundle({\n          id: 1, cursor: c.id, type: 'set',\n          path: 'some', value: 'result',\n        }, () => {\n          bqm.useBundle({\n            id: 0, cursor: c.id, type: 'set',\n            path: 'some', value: 'other',\n          }, () => {\n            assert.deepEqual(c.get('some'), 'result');\n            done();\n          });\n        });\n      });\n    });\n    it('unset', (done) => {\n      var cm = new CursorsManager(Cursor);\n      var bqm = new BundleQueuesManager(...generateAdapterForBundleQueuesManager(cm).adapters);\n      var c = cm.new('any',{'some':'thing'});\n      \n      bqm.useBundle({\n        id: 5, cursor: c.id, type: 'set',\n        path: 'some', value: 'nothing',\n      }, () => {\n        bqm.useBundle({\n          id: 1, cursor: c.id, type: 'unset',\n          path: 'some',\n        }, () => {\n          bqm.useBundle({\n            id: 0, cursor: c.id, type: 'set',\n            path: 'some', value: 'other',\n          }, () => {\n            assert.deepEqual(c.get('some'), undefined);\n            done();\n          });\n        });\n      });\n    });\n    it('splice', (done) => {\n      var cm = new CursorsManager(Cursor);\n      var bqm = new BundleQueuesManager(...generateAdapterForBundleQueuesManager(cm).adapters);\n      var c = cm.new('any',{'some':['things','and','others']});\n      \n      bqm.useBundle({\n        id: 1, cursor: c.id, type: 'splice',\n        path: 'some',\n        start: 3, deleteCount: 1, items: ['nothing'],\n      }, () => {\n        bqm.useBundle({\n          id: 0, cursor: c.id, type: 'splice',\n          path: 'some',\n          start: 2, deleteCount: 0, items: ['some'],\n        }, () => {\n          assert.deepEqual(c.get('some'), ['things','and','some','nothing']);\n          done();\n        });\n      });\n    });\n  });\n  describe('ApiManager', () => {\n    it('api instance must receive queries and send bundles', (done) => {\n      var counter = 1;\n      var interval;\n      var disconnected = false;\n      var manager = new ApiManager(\n        function adapterFindApi(apiQuery) {\n          assert.equal(apiQuery, 'a');\n          function sendBundles(channelId, bundles) {\n            manager.adapterSend(channelId, bundles);\n          };\n          return new Promise((resolve) => resolve({\n            receiveQuery(channelId, query, cursorId, sendBundles) {\n              assert.equal(channelId, 2);\n              assert.equal(query, null);\n              assert.equal(cursorId, 3);\n              interval = setInterval(() => {\n                sendBundles(channelId, ++counter, counter);\n              }, 100);\n            },\n            cursorDestroyed(channelId, cursorId, sendBundles) {\n              assert.equal(channelId, 2);\n              assert.equal(cursorId, 3);\n              clearInterval(interval);\n              assert.equal(disconnected, true);\n              done();\n            },\n            channelDisconnected(channelId, sendBundles) {\n              assert.equal(disconnected, false)\n              disconnected = true;\n            },\n          }));\n        },\n        function adapterSend(channelId, bundles) {\n          assert.equal(channelId, 2);\n          assert.equal(bundles[0], counter);\n          assert.equal(bundles[1], counter);\n          if (counter > 3) {\n            manager.channelDisconnected(channelId);\n          }\n        },\n      );\n      manager.receiveQuery(2, 'a', null, 3);\n    });\n  });\n  describe('CursorsManager', () => {\n    it('just should works', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any','thing');\n      var id0 = cursor.id;\n      assert.equal(manager.cursors[cursor.id], cursor);\n      cursor.destroy();\n      assert.notProperty(manager.cursors, cursor.id);\n      manager.renew(cursor, 'other', 'something');\n      var id1 = cursor.id;\n      assert.notEqual(id0, id1);\n      assert.equal(cursor.query, 'other');\n      assert.equal(cursor.data, 'something');\n    });\n  });\n  describe('concepts', () => {\n    it('fake primitive server-channel with one api provider', () => {\n      var server = (() => {\n        var cursor = new Cursor(undefined, { a: { b: [{ c: 'd' }, { e: 'f' }] } });\n        var channelCursors = {};\n        \n        cursor.on(null, (old, current, stop) => {\n          var bundles = {};\n          for (var c in channelCursors) {\n            let currentPerCursor = lodash.get(current, channelCursors[c].query);\n            if (!lodash.isEqual(channelCursors[c].old, currentPerCursor)) {\n              channelCursors[c].old = currentPerCursor;\n              bundles[c] = {\n                id: channelCursors[c].bundlesCounter, \n                type: 'set', cursor: c,\n                path: '', value: currentPerCursor,\n              };\n              channelCursors[c].bundlesCounter++;\n            }\n          }\n          channel.changes(bundles);\n        });\n        \n        var server = {\n          api: {\n            cursor,\n            channelCursors,\n          },\n          request: (channelCursorId, query) => {\n            var result = lodash.cloneDeep(cursor.get(query));\n            if (!channelCursors[channelCursorId]) {\n              channelCursors[channelCursorId] = {\n                bundlesCounter: 0,\n                query: query,\n                old: result,\n              };\n            }\n            return lodash.cloneDeep(result);\n          },\n        };\n        \n        return server;\n      })();\n      \n      var channel = (() => {\n        var cm = new CursorsManager(Cursor);\n        var bqm = new BundleQueuesManager(...generateAdapterForBundleQueuesManager(cm).adapters);\n        \n        return {\n          api: {\n            cm,\n            needData: (query) => {\n              var cursor = cm.new(query);\n              var data = server.request(cursor.id, query);\n              cursor.set(null, data);\n              return cursor;\n            },\n          },\n          changes: (bundles) => {\n            for (var b in bundles) {\n              if (cm.cursors[bundles[b].cursor]) {\n                bqm.useBundle(bundles[b]);\n              }\n            }\n          }\n        };\n      })();\n      \n      var cursor1 = channel.api.needData('a');\n      var cursor2 = channel.api.needData('a.b[0]');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get('c'), server.api.cursor.get('a.b[0].c'));\n      \n      server.api.cursor.set('a.b[0].c', 'j');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get('c'), server.api.cursor.get('a.b[0].c'));\n      \n      server.api.cursor.splice('a.b', 0, 1, 'abrvalk');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get(), server.api.cursor.get('a.b[0]'));\n    });\n    reactTest();\n  });\n});"]}
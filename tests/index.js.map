{"version":3,"sources":["../src/tests/index.js"],"names":["require","install","BundlesQueue","id","task","done","describe","it","document","any","custom","many","cursor","equal","get","before","after","set","a","b","c","d","deepEqual","x","splice","e","testString","queue","addBundle","manager","new","cursors","type","path","value","undefined","start","deleteCount","items","server","clientCursors","on","stop","bundles","afterPerCursor","query","isEqual","bundlesCounter","client","changes","api","request","clientCursorId","result","cloneDeep","ClientBundlesQueue","arguments","bundlesQueue","needData","data","cursor1","cursor2"],"mappings":"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","file":"index.js","sourcesContent":["require('source-map-support').install();\n\nimport { assert } from 'chai';\nimport {\n  Cursor,\n  BundlesQueue as BundlesQueueProto,\n  CursorsManager,\n  executeBundle,\n  executers,\n} from '../lib';\nimport reactTest from './react';\n\nimport lodash from 'lodash';\nimport mingo from 'mingo';\n\nclass BundlesQueue extends BundlesQueueProto {\n  _handler(id, task, done) {\n    task();\n    done();\n  }\n}\n\ndescribe('AncientSouls/Graph', () => {\n  describe('Cursor', () => {\n    it('get by path', () => {\n      var document = { any: [{ custom: { many: 'data' } }] };\n      var cursor = new Cursor(true, document);\n      assert.equal(cursor.get('any.0.custom.many'), 'data');\n    });\n    it('get handle path after set changes', (done) => {\n      var document = { any: [{ custom: { many: 'before' } }] };\n      var cursor = new Cursor(true, document);\n      cursor.get('any.0.custom.many', (before, after) => {\n        assert.equal(before, 'before');\n        assert.equal(after, 'after');\n        done();\n      });\n      cursor.set('any.0.custom.many', 'after');\n    });\n    it('set', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }] });\n      cursor.set('a.0.b', 'z');\n      assert.deepEqual(cursor.get('a.0'), { b: 'z' });\n      cursor.set('', { x: 'y' });\n      assert.deepEqual(cursor.get(), { x: 'y' });\n    });\n    it('splice', () => {\n      var cursor = new Cursor(true, { a: [{ b: 'x' }, { c: 'y' }, { d: 'z' }] });\n      cursor.splice('a', 1, 1, { e: 'q' });\n      assert.equal(cursor.get('a.1.e'), 'q');\n    });\n  });\n  describe('BundlesQueue', () => {\n    it('only nextId bundle can be handled', () => {\n      var testString = '';\n      var queue = new BundlesQueue();\n      queue.addBundle(2, () => testString += 'c');\n      queue.addBundle(1, () => testString += 'b');\n      queue.addBundle(0, () => testString += 'a');\n      queue.addBundle(3, () => testString += 'd');\n      assert.equal(testString, 'abcd');\n    });\n  });\n  describe('CursorsManager', () => {\n    it('just should works', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any','thing');\n      assert.equal(manager.cursors[cursor.id], cursor);\n    });\n  });\n  describe('bundles', () => {\n    it('set', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any',{'some':'thing'});\n      executeBundle({\n        cursor: cursor.id, type: 'set',\n        path: 'some',\n        value: 'other',\n      }, cursor, executers);\n      assert.deepEqual(cursor.get('some'), 'other');\n    });\n    it('unset', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any',{'some':'thing'});\n      executeBundle({\n        cursor: cursor.id, type: 'unset',\n        path: 'some',\n      }, cursor, executers);\n      assert.deepEqual(cursor.get('some'), undefined);\n    });\n    it('splice', () => {\n      var manager = new CursorsManager(Cursor);\n      var cursor = manager.new('any',{'some':['things','and','others']});\n      executeBundle({\n        cursor: cursor.id, type: 'splice',\n        path: 'some',\n        start: 2, deleteCount: 0, items: ['some'],\n      }, cursor, executers);\n      assert.deepEqual(cursor.get('some'), ['things','and','some','others']);\n    });\n  });\n  describe('concepts', () => {\n    it('fake primitive server-client', () => {\n      var server = (() => {\n        var cursor = new Cursor(undefined, { a: { b: [{ c: 'd' }, { e: 'f' }] } });\n        var clientCursors = {};\n        \n        cursor.on(null, (before, after, stop) => {\n          var bundles = {};\n          for (var c in clientCursors) {\n            let afterPerCursor = lodash.get(after, clientCursors[c].query);\n            if (!lodash.isEqual(clientCursors[c].before, afterPerCursor)) {\n              clientCursors[c].before = afterPerCursor;\n              bundles[c] = {\n                id: clientCursors[c].bundlesCounter, \n                type: 'set', cursor: c,\n                path: '', value: afterPerCursor,\n              };\n              clientCursors[c].bundlesCounter++;\n            }\n          }\n          client.changes(bundles);\n        });\n        \n        var server = {\n          api: {\n            cursor,\n            clientCursors,\n          },\n          request: (clientCursorId, query) => {\n            var result = lodash.cloneDeep(cursor.get(query));\n            if (!clientCursors[clientCursorId]) {\n              clientCursors[clientCursorId] = {\n                bundlesCounter: 0,\n                query: query,\n                before: result,\n              };\n            }\n            return lodash.cloneDeep(result);\n          },\n        };\n        \n        return server;\n      })();\n      \n      var client = (() => {\n        class ClientBundlesQueue extends BundlesQueueProto {\n          constructor(cursor) {\n            super();\n            this.cursor = cursor;\n          }\n          _handler(id, task, done) {\n            executeBundle(task, this.cursor, executers);\n            done();\n          }\n        }\n        \n        var manager = new CursorsManager(class extends Cursor {\n          constructor() {\n            super(...arguments);\n            this.bundlesQueue = new ClientBundlesQueue(this);\n          }\n        });\n        \n        return {\n          api: {\n            manager,\n            needData: (query) => {\n              var cursor = manager.new(query);\n              var data = server.request(cursor.id, query);\n              cursor.set(null, data);\n              return cursor;\n            },\n          },\n          changes: (bundles) => {\n            for (var b in bundles) {\n              if (manager.cursors[bundles[b].cursor]) {\n                manager.cursors[bundles[b].cursor].bundlesQueue.addBundle(bundles[b].id, bundles[b]);\n              }\n            }\n          }\n        };\n      })();\n      \n      var cursor1 = client.api.needData('a');\n      var cursor2 = client.api.needData('a.b[0]');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get('c'), server.api.cursor.get('a.b[0].c'));\n      \n      server.api.cursor.set('a.b[0].c', 'j');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get('c'), server.api.cursor.get('a.b[0].c'));\n      \n      server.api.cursor.splice('a.b', 0, 1, 'abrvalk');\n      \n      assert.deepEqual(cursor1.get(), server.api.cursor.get('a'));\n      assert.deepEqual(cursor2.get(), server.api.cursor.get('a.b[0]'));\n    });\n    reactTest();\n  });\n});"]}